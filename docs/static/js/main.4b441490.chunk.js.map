{"version":3,"sources":["services/api.js","components/CharacterCard.js","components/CharacterList.js","components/FilterByName.js","components/Filters.js","services/iconSpecies.js","components/CharacterDetail.js","services/localStorage.js","components/NotFound.js","images/Rick&MortyLogo.png","components/App.js","index.js"],"names":["getDataFromApi","fetch","then","response","json","data","results","map","character","image","name","species","id","planet","origin","episode","status","CharacterCard","props","className","to","src","alt","title","CharacterList","characterElements","characters","FilterByName","htmlFor","type","placeholder","value","filterName","onChange","ev","handleFilter","target","key","Filters","onSubmit","preventDefault","humanIcon","alienIcon","iconSpecies","toLowerCase","CharacterDetail","length","objLs","get","lsData","localStorage","getItem","JSON","parse","set","setItem","stringify","NotFound","App","useState","setCharacters","setFilterName","useEffect","charactersApiData","ls","filteredCharacters","filter","toUpperCase","includes","logoHeader","exact","path","inputData","render","routeProps","routeCharacterId","match","params","characterDetail","find","parseInt","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b441490.chunk.js","sourcesContent":["const getDataFromApi = () => {\r\n  return fetch(\"https://rickandmortyapi.com/api/character\")\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      //console.log(data);\r\n      /*Seleccionamos los datos que necesitamos con map*/\r\n      const characterData = data.results.map((character) => {\r\n        //console.log(character);\r\n        return {\r\n          image: character.image,\r\n          name: character.name,\r\n          species: character.species,\r\n          id: character.id,\r\n          planet: character.origin.name,\r\n          episode: character.episode,\r\n          status: character.status,\r\n        };\r\n      });\r\n      //console.log(characterData);\r\n      return characterData;\r\n    });\r\n};\r\n\r\nexport default getDataFromApi;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CharacterCard = (props) => {\r\n  //console.log(props.character.id);\r\n  return (\r\n    <article className=\"backgroundCardList\">\r\n      <Link to={`./characterDetail/${props.character.id}`}>\r\n        <img\r\n          className=\"imgCharacter\"\r\n          src={props.character.image}\r\n          alt={props.character.name}\r\n          title={props.character.name}\r\n        />\r\n      </Link>\r\n      <div className=\"cardText\">\r\n        <h3 className=\"nameCharacter\">{props.character.name}</h3>\r\n        <p>{props.character.species}</p>\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default CharacterCard;\r\n","import React from \"react\";\r\nimport CharacterCard from \"./CharacterCard\";\r\n\r\nconst CharacterList = (props) => {\r\n  const characterElements = props.characters.map((character) => {\r\n    return (\r\n      <li className=\"list\" key={character.id}>\r\n        <CharacterCard character={character} />\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <section>\r\n      <ul className=\"characterCard\">{characterElements}</ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CharacterList;\r\n","import React from \"react\";\r\n\r\nconst FilterByName = (props) => {\r\n  const handleInput = (ev) => {\r\n    props.handleFilter({\r\n      value: ev.target.value,\r\n      key: \"name\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor=\"name\"></label>\r\n      <input\r\n        className=\"inputSearch\"\r\n        type=\"text\"\r\n        placeholder=\"Buscar por nombre\"\r\n        name=\"name\"\r\n        id=\"name\"\r\n        value={props.filterName}\r\n        onChange={handleInput}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilterByName;\r\n","import React from \"react\";\r\nimport FilterByName from \"./FilterByName\";\r\n\r\nconst Filters = (props) => {\r\n  const handleForm = (ev) => {\r\n    ev.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleForm} className=\"formWrap\">\r\n      <FilterByName\r\n        filterName={props.filterName}\r\n        handleFilter={props.handleFilter}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","const humanIcon = <i className=\"fas fa-user\"></i>;\r\nconst alienIcon = <i className=\"fab fa-reddit-alien\"></i>;\r\n\r\nconst iconSpecies = (species) => {\r\n  return species.toLowerCase() === \"human\" ? humanIcon : alienIcon;\r\n};\r\n\r\nexport default iconSpecies;\r\n","import { Link } from \"react-router-dom\";\r\nimport iconSpecies from \"../services/iconSpecies\";\r\n\r\nconst CharacterDetail = (props) => {\r\n  //console.log(props.character.name);\r\n  const species = props.character.species;\r\n\r\n  return (\r\n    <section className=\"characterDetailWrap\">\r\n      <Link to=\"/\" className=\"linkBack\">\r\n        <i className=\"fas fa-angle-left iconBack\"></i> Volver\r\n      </Link>\r\n      <article className=\"characterDetail\">\r\n        <img\r\n          className=\"imgCharacter\"\r\n          src={props.character.image}\r\n          alt={props.character.name}\r\n        />\r\n        <div className=\"characterData\">\r\n          <h4>{props.character.name}</h4>\r\n          <div>\r\n            <p>Especie: {props.character.species}</p>\r\n            {iconSpecies(species)}\r\n          </div>\r\n          <p>Planeta de origen: {props.character.planet}</p>\r\n          <p>Episodios: {props.character.episode.length}</p>\r\n          <p>Status: {props.character.status}</p>\r\n        </div>\r\n      </article>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CharacterDetail;\r\n","const get = (key) => {\r\n  const lsData = localStorage.getItem(key);\r\n  if (lsData === null) {\r\n    return [];\r\n  } else {\r\n    return JSON.parse(lsData);\r\n  }\r\n};\r\n\r\nconst set = (key, value) => {\r\n  localStorage.setItem(key, JSON.stringify(value));\r\n};\r\n\r\nconst objLs = {\r\n  get: get,\r\n  set: set,\r\n};\r\n\r\nexport default objLs;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <main>\r\n      <p className=\"notFoundText\">El personaje que buscas no existe</p>\r\n      <Link to=\"/\" className=\"linkBack\">\r\n        {\" \"}\r\n        <i className=\"fas fa-angle-left iconBack\"></i> Volver\r\n      </Link>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","export default __webpack_public_path__ + \"static/media/Rick&MortyLogo.de13d484.png\";","import React, { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport getDataFromApi from \"../services/api\";\nimport CharacterList from \"./CharacterList\";\nimport Filters from \"./Filters\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport ls from \"../services/localStorage\";\nimport NotFound from \"./NotFound\";\nimport logoHeader from \"../images/Rick&MortyLogo.png\";\nimport \"../stylesheets/App.scss\";\n\nfunction App() {\n  const [characters, setCharacters] = useState([]);\n\n  const [filterName, setFilterName] = useState(\"\");\n\n  //Traemos los datos filtrados del API por imagen, nombre y especie. Actualizamos estado con setCharacters\n  useEffect(() => {\n    //if (characters===0){\n    getDataFromApi().then((charactersApiData) => {\n      //console.log(charactersApiData);\n      setCharacters(charactersApiData);\n    });\n    //}else return (ls.get(\"characters\", []))}\n  }, []);\n\n  useEffect(() => {\n    ls.set(\"characters\", characters);\n  }, [characters]);\n\n  useEffect(() => {\n    ls.set(\"filterName\", filterName);\n  }, [filterName]);\n\n  //Filtro por nombre\n  const filteredCharacters = characters.filter((character) => {\n    //console.log(character.name);\n    return character.name.toUpperCase().includes(filterName.toUpperCase());\n  });\n\n  //event\n  //Con inputData recibimos los datos que hemos pasado por lifting desde FilterByName: value y key\n  const handleFilter = (inputData) => {\n    //console.log(inputData);\n    if (inputData.key === \"name\") {\n      setFilterName(inputData.value);\n    } else if (inputData.key !== \"name\") {\n      return <p>No hay ningún personaje que coincida con {inputData.value}</p>;\n    }\n  };\n\n  //render\n  const renderCharacterDetail = (routeProps) => {\n    //console.log(\"Router props\", props); //para comparar el id seleccionado del API, necesitamos compararlos con el id del router\n    //Filtramos y seleccionamos un único objeto con find (será el personaje encontrado)\n    const routeCharacterId = routeProps.match.params.id;\n\n    const characterDetail = characters.find((character) => {\n      return character.id === parseInt(routeCharacterId);\n    });\n    //console.log(characterDetail); //Devuelve un objeto del personaje seleccionado\n    if (characterDetail) {\n      return <CharacterDetail character={characterDetail} />;\n    } else {\n      return <NotFound />;\n    }\n  };\n\n  return (\n    <>\n      <header className=\"headerLogo\">\n        <img\n          className=\"imgLogo\"\n          src={logoHeader}\n          alt=\"Rick and Morty logo\"\n          title=\"Rick and Morty logo\"\n        />\n      </header>\n      <main>\n        <Switch>\n          <Route exact path=\"/\">\n            <Filters filterName={filterName} handleFilter={handleFilter} />\n            <CharacterList characters={filteredCharacters} />\n          </Route>\n          <Route\n            path=\"/characterdetail/:id\"\n            render={renderCharacterDetail}></Route>\n        </Switch>\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport App from \"./components/App\";\nimport \"./stylesheets/index.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}